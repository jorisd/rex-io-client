=pod

=head2 Rex::IO::Client

This is the client component of the Rex.IO Infrastructure.

With this client you can also run Rex as an agent on your servers and let the configuration pull from a central server. See L<https://metacpan.org/module/Rex::IO::Server> for more information.

This is a work in progress project.

=head2 DEPENDENCIES

=over 4

=item Mojolicious

=item Rex::IO::Server

=back

=head2 INSTALLATION

First you have to install Mojolicious. You can download it from CPAN or L<http://mojolicio.us>.

Than you have to setup L<https://github.com/krimdomu/rex-io-cmdb> and L<https://github.com/krimdomu/rex-io-server>.

After that you can clone this repository.

 git clone git://github.com/krimdomu/rex-io-client.git
 cd rex-io-client

Edit the file I<client.conf> to suit your needs.

=head2 USAGE

This command displays the help.

 bin/rex.io --help

Add a new service

 bin/rex.io --service=ntp --add --desc="The NTP Service" --variables='{"cfg": {"server": {"type": "string", "default":"pool.ntp.org"}}}'

List services

 bin/rex.io --list-services

Add a new server

 bin/rex.io --server=serv01 --add

List servers

 bin/rex.io --list-servers

Add a new service to a server

 bin/rex.io --server=serv01 --add --service=ntp

Query a server

 bin/rex.io --server=serv01 --get

Configure a service for a server

 bin/rex.io --server=serv01 --service=ntp --section=cfg --variables='{"server": "ntp.local.lan"}'

=head2 USE IN A REXFILE

To use the configuration database within your Rexfiles you can do this like that.

 # Rexfile
 use Rex::IO::Client;
    
 group frontends => "serv01";
    
 task "prepare", group => "frontends", sub {
    file "/etc/ntp.conf",
       content => template("templates/etc/ntp.conf.tpl", cmdb_get("service://ntp/cfg"));
 };

And the template looks like this.

 # NTP Server
 server <%= $::server %>

 

